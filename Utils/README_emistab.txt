________________
________________
EMISTAB README
________________
________________

Graham Kerr
Sept 2021

graham.s.kerr@nasa.gov; grahamkerr.astro@gmail.com

________
Summary
________

This is an alternative implementation of the mechanism to allow for an irradiating spectrum to be included as a boundary condition in the solution of the radiative transfer equation. This is particularly important for transitions such as He I 10830. 

This method, described in Kerr et al 2019 ApJ 883, is suitable for use when simulating the full atmosphere only, since it uses the local conditions of the corona and transition region to generate the irradiating spectrum. It is designed to allow for a straightforward inclusion of the irradiation of the chromosphere/TR by the overlying corona, using a single look up table from which the emissivity in each cell is generated by interpolating to the local temperature and emission measure. In this way it is not necessary to generate a bespoke file for each column being solved. 

It should be possible to add additional intensity to the spectrum if required, but this is not currently implemented. 

Here the modifications to RH15D are described, along with a description of how to create the required look up table.


_____
Generating emis_grid.dat
_____

Emissivities are tabulated on a wavelength, temperature, and electron density grid, generated using data from the CHIANTI database. 

The contribution functions (G(n,T)), are extracted for every transition in CHIANTI, assuming ionisation equilibrium, for a range of electron density values. In the default set provided here we define temperature on a log scale spanning 101 values (the same as the CHIANTI database uses to define the G(n,T)s) and electron desnsity on a log scale spanning 21 values (from log d = 6 to 16). Wavelengths span 1 to 10000A. Longer wavelengths are not likely to be important for these purposes but you can always re-make this structure to include those. These are saved in an IDL .sav (chianti_gofnt.sav) file containing a structure chianti_gofnt and the log d grid. The code to produce this is called chianti_gofnt_comp.pro.

The emissivity at some wavelength can be calculated using the code uvlines_etab.pro which itself calls a c routine uvlines.par.c (the parallel version, switch nthreads = 1 to use the non-parallel version uvlines.c). Setting /contribfunc in uvlines_etab.pro returns the emissivity in each cell instead of intensity. Note that this code was originally written with RADYN in mind, hence some of the variable names. This is called from makeemistabdat_rh.pro, which is a wrapper that creates the wavelength grid, sets up the call to uvlines_etab.pro for each density and temperature value, and collates the results. It also write the .dat file that is used in RH. 

The default wavelengh grid spans the wavelength range of the input CHIANTI_gofnt structure (which itself defaults to 1->10000A), with a 1A resolution, which should be more than sufficient. 

In makeemistab_rh.dat you can also select which transitions to remove, so that they are not double counted by the RH active atom set. You can either remove a whole species, a specific ion of that species, or a specific transition. Currently the standard active set that I use are included in this code so that you see how to do this. 

There are several example emis_grid.dat files included here. They are

emis_grid.dat.no_H_He --> no hydrogen or helium transitions are included
emis_grid.dat.no_H_He_standardRH --> no hydrogen, helium, or transitions from the standard RH set up that I use are included (Mg II, C II, Si, Ca II, O I)

They are appended with either _aspl09, or _schmelz12 which specifies which abundance table was used. 

Note that if you want to run these codes yourself you may have to increase the stack memory limit on your system, otherwise you may get a segmentation fault due to running out of memory. On my system I increase this to 49152 kb (ulimit -s 49152... ulimit -all to see the current limits). The stack memory will increase on every thread. 

The c routines have been successfully compiled and run on Linux systems, but I ran into trouble compiling with the latest version of Mac OS X, which I have not yet spent the time to fix. 


_____
Running RH15D with emis_grid.dat
_____

RH 1.5D has been modified to include IRRADIATED_INTP as a boundadry condition. This will trigger the calling of reademistab.c, which will read emis_grid.dat, interpolate as required, and produce the spectrum on a grid appropriate to the active atom set. 

In order to use this boundary condition the top boundary should be set to a value of '4' in the input atmosphere. This is the boundary_top variable. 

The emis_grad.dat file should be located in the directory containing the atmosphere file (usually ../Atmos). Note that this is hardcoded in as a relative path, so if you are not running with Atmos located ../ then you should change reademistab.dat to point to the correct location. 




________
TO DO
________

** Improve documentation of IDL routines
** Create python versions (is there a CHINATI python version yet?)
** Tidy up reademistab_rh.pro
** Port to rhf1d... I already have this on my own version but the switches are different. Just need to figure out a cleaner way to include the switches. 
** Make it possible to specfify the location of emis_grid.dat, e.g. from the keyword.input file. 